{"ast":null,"code":"import{EDIT_EVENT,ADD_EVENTS,EVENTS_FAILED,EVENTS_LOADING}from\"../ActionTypes\";import{baseUrl}from\"../../baseUrl\";export var getEvent=function getEvent(name){return function(dispatch){var token=localStorage.getItem(\"token\");return fetch(baseUrl+\"events/\"+name,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",access_token:token},credentials:\"same-origin\"}).then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \"+response.status+\": \"+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){if(response.success){return dispatch(editEvent(response.results));}else{var error=new Error(response.error);throw error;}}).catch(function(error){alert(\"Your event could not be added\\nError: \"+error.message);});};};export var fetchEvents=function fetchEvents(){return function(dispatch){dispatch(eventsLoading(true));return fetch(baseUrl+\"events\").then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \"+response.status+\": \"+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(response){/*  if(response.success)\n          {\n            return  dispatch(addEvents(response.results));\n          }\n          else {\n            var error = new Error(response.error);\n            throw error;\n          }*/return dispatch(addEvents(response));}).catch(function(error){return dispatch(eventsFailed(error.message));});};};export var eventsLoading=function eventsLoading(){return{type:EVENTS_LOADING};};export var eventsFailed=function eventsFailed(errmess){return{type:EVENTS_FAILED,payload:errmess};};export var addEvents=function addEvents(events){return{type:ADD_EVENTS,payload:events};};export var editEvent=function editEvent(events){return{type:EDIT_EVENT,payload:events};};","map":{"version":3,"sources":["/home/chirag/Documents/concetto/concetto_front/src/redux/Actions/Events.js"],"names":["EDIT_EVENT","ADD_EVENTS","EVENTS_FAILED","EVENTS_LOADING","baseUrl","getEvent","name","dispatch","token","localStorage","getItem","fetch","method","headers","access_token","credentials","then","response","ok","error","Error","status","statusText","json","success","editEvent","results","catch","alert","message","fetchEvents","eventsLoading","errmess","addEvents","eventsFailed","type","payload","events"],"mappings":"AAAA,OACEA,UADF,CAEEC,UAFF,CAGEC,aAHF,CAIEC,cAJF,KAKO,gBALP,CAMA,OAASC,OAAT,KAAwB,eAAxB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,IAAI,QAAI,UAAAC,QAAQ,CAAI,CAC1C,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,MAAOC,CAAAA,KAAK,CAACP,OAAO,CAAG,SAAV,CAAsBE,IAAvB,CAA6B,CACvCM,MAAM,CAAE,KAD+B,CAEvCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,YAAY,CAAEN,KAFP,CAF8B,CAMvCO,WAAW,CAAE,aAN0B,CAA7B,CAAL,CAQJC,IARI,CASH,SAAAC,QAAQ,CAAI,CACV,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACf,MAAOD,CAAAA,QAAP,CACD,CAFD,IAEO,CACL,GAAIE,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CACV,SAAWH,QAAQ,CAACI,MAApB,CAA6B,IAA7B,CAAoCJ,QAAQ,CAACK,UADnC,CAAZ,CAGAH,KAAK,CAACF,QAAN,CAAiBA,QAAjB,CACA,KAAME,CAAAA,KAAN,CACD,CACF,CAnBE,CAoBH,SAAAA,KAAK,CAAI,CACP,KAAMA,CAAAA,KAAN,CACD,CAtBE,EAwBJH,IAxBI,CAwBC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACM,IAAT,EAAJ,EAxBT,EAyBJP,IAzBI,CAyBC,SAAAC,QAAQ,CAAI,CAChB,GAAIA,QAAQ,CAACO,OAAb,CAAsB,CACpB,MAAOjB,CAAAA,QAAQ,CAACkB,SAAS,CAACR,QAAQ,CAACS,OAAV,CAAV,CAAf,CACD,CAFD,IAEO,CACL,GAAIP,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACE,KAAnB,CAAZ,CACA,KAAMA,CAAAA,KAAN,CACD,CACF,CAhCI,EAiCJQ,KAjCI,CAiCE,SAAAR,KAAK,CAAI,CACdS,KAAK,CAAC,yCAA2CT,KAAK,CAACU,OAAlD,CAAL,CACD,CAnCI,CAAP,CAoCD,CAtC2B,EAArB,CAwCP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,UAAAvB,QAAQ,CAAI,CAC3CA,QAAQ,CAACwB,aAAa,CAAC,IAAD,CAAd,CAAR,CACA,MAAOpB,CAAAA,KAAK,CAACP,OAAO,CAAG,QAAX,CAAL,CACJY,IADI,CAEH,SAAAC,QAAQ,CAAI,CACV,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACf,MAAOD,CAAAA,QAAP,CACD,CAFD,IAEO,CACL,GAAIE,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CACV,SAAWH,QAAQ,CAACI,MAApB,CAA6B,IAA7B,CAAoCJ,QAAQ,CAACK,UADnC,CAAZ,CAGAH,KAAK,CAACF,QAAN,CAAiBA,QAAjB,CACA,KAAME,CAAAA,KAAN,CACD,CACF,CAZE,CAaH,SAAAA,KAAK,CAAI,CACP,GAAIa,CAAAA,OAAO,CAAG,GAAIZ,CAAAA,KAAJ,CAAUD,KAAK,CAACU,OAAhB,CAAd,CACA,KAAMG,CAAAA,OAAN,CACD,CAhBE,EAkBJhB,IAlBI,CAkBC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACM,IAAT,EAAJ,EAlBT,EAmBJP,IAnBI,CAmBC,SAAAC,QAAQ,CAAI,CAChB;;;;;;;aAQA,MAAOV,CAAAA,QAAQ,CAAC0B,SAAS,CAAChB,QAAD,CAAV,CAAf,CACD,CA7BI,EA8BJU,KA9BI,CA8BE,SAAAR,KAAK,QAAIZ,CAAAA,QAAQ,CAAC2B,YAAY,CAACf,KAAK,CAACU,OAAP,CAAb,CAAZ,EA9BP,CAAP,CA+BD,CAjC0B,EAApB,CAmCP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAO,CAClCI,IAAI,CAAEhC,cAD4B,CAAP,EAAtB,CAIP,MAAO,IAAM+B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,OAAO,QAAK,CACtCG,IAAI,CAAEjC,aADgC,CAEtCkC,OAAO,CAAEJ,OAF6B,CAAL,EAA5B,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAI,MAAM,QAAK,CAClCF,IAAI,CAAElC,UAD4B,CAElCmC,OAAO,CAAEC,MAFyB,CAAL,EAAxB,CAKP,MAAO,IAAMZ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAY,MAAM,QAAK,CAClCF,IAAI,CAAEnC,UAD4B,CAElCoC,OAAO,CAAEC,MAFyB,CAAL,EAAxB","sourcesContent":["import {\n  EDIT_EVENT,\n  ADD_EVENTS,\n  EVENTS_FAILED,\n  EVENTS_LOADING\n} from \"../ActionTypes\";\nimport { baseUrl } from \"../../baseUrl\";\n\nexport const getEvent = name => dispatch => {\n  const token = localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"events/\" + name, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      access_token: token\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => {\n      if (response.success) {\n        return dispatch(editEvent(response.results));\n      } else {\n        var error = new Error(response.error);\n        throw error;\n      }\n    })\n    .catch(error => {\n      alert(\"Your event could not be added\\nError: \" + error.message);\n    });\n};\n\nexport const fetchEvents = () => dispatch => {\n  dispatch(eventsLoading(true));\n  return fetch(baseUrl + \"events\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(response => {\n      /*  if(response.success)\n          {\n            return  dispatch(addEvents(response.results));\n          }\n          else {\n            var error = new Error(response.error);\n            throw error;\n          }*/\n      return dispatch(addEvents(response));\n    })\n    .catch(error => dispatch(eventsFailed(error.message)));\n};\n\nexport const eventsLoading = () => ({\n  type: EVENTS_LOADING\n});\n\nexport const eventsFailed = errmess => ({\n  type: EVENTS_FAILED,\n  payload: errmess\n});\n\nexport const addEvents = events => ({\n  type: ADD_EVENTS,\n  payload: events\n});\n\nexport const editEvent = events => ({\n  type: EDIT_EVENT,\n  payload: events\n});\n"]},"metadata":{},"sourceType":"module"}