{"ast":null,"code":"import{LOGIN_REQUEST,LOGIN_FAILURE,LOGIN_SUCCESS,LOGOUT_REQUEST,LOGOUT_SUCCESS}from'../ActionTypes';import{baseUrl}from'../../baseUrl';import{fetchUsers}from'./Users';export var requestLogin=function requestLogin(creds){return{type:LOGIN_REQUEST,creds:creds};};export var receiveLogin=function receiveLogin(response){return{type:LOGIN_SUCCESS,token:response.token,userinfo:response.userinfo};};export var loginError=function loginError(message){return{type:LOGIN_FAILURE,message:message};};export var loginUser=function loginUser(creds){return function(dispatch){dispatch(requestLogin(creds));return fetch(baseUrl+'users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(creds)}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){if(response.success){// If login was successful, set the token in local storage\nlocalStorage.setItem('token',response.results.token);localStorage.setItem('creds',JSON.stringify(creds));localStorage.setItem('userinfo',JSON.stringify(response.results.userinfo));dispatch(fetchUsers());// Dispatch the success action\ndispatch(receiveLogin(response.results));}else{var error=new Error(response.error);error.response=response;throw error;}}).catch(function(error){alert(error.message);return dispatch(loginError(error.message));});};};export var registerUser=function registerUser(creds){return function(dispatch){return fetch(baseUrl+'users/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(creds)}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){if(response.success){// If Registration was successful, alert the user\nalert('Registration Successful');}else{var error=new Error(response.error);error.response=response;throw error;}}).catch(function(error){return alert('Error : '+error.message);});};};export var requestLogout=function requestLogout(){return{type:LOGOUT_REQUEST};};export var receiveLogout=function receiveLogout(){return{type:LOGOUT_SUCCESS};};export var logoutUser=function logoutUser(){return function(dispatch){dispatch(requestLogout());localStorage.removeItem('token');localStorage.removeItem('creds');localStorage.removeItem('userinfo');dispatch(receiveLogout());};};","map":{"version":3,"sources":["/home/chirag/Documents/concetto/concetto_front/src/redux/Actions/Auth.js"],"names":["LOGIN_REQUEST","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","baseUrl","fetchUsers","requestLogin","creds","type","receiveLogin","response","token","userinfo","loginError","message","loginUser","dispatch","fetch","method","headers","body","JSON","stringify","then","ok","error","Error","status","statusText","json","success","localStorage","setItem","results","catch","alert","registerUser","requestLogout","receiveLogout","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import {LOGIN_REQUEST,LOGIN_FAILURE,LOGIN_SUCCESS,LOGOUT_REQUEST,LOGOUT_SUCCESS} from '../ActionTypes';\nimport {baseUrl} from '../../baseUrl';\nimport {fetchUsers} from './Users';\n\nexport const requestLogin = (creds) => {\n    return {\n        type: LOGIN_REQUEST,\n        creds\n    }\n  }\n  \n  export const receiveLogin = (response) => {\n    return {\n        type: LOGIN_SUCCESS,\n        token: response.token,\n        userinfo: response.userinfo\n    }\n  }\n  \n  export const loginError = (message) => {\n    return {\n        type: LOGIN_FAILURE,\n        message\n    }\n  }\n  \n  export const loginUser = (creds) => (dispatch) => {\n  \n    dispatch(requestLogin(creds));\n    return fetch(baseUrl + 'users/login', {\n        method: 'POST',\n        headers: { \n            'Content-Type':'application/json' \n        },\n        body: JSON.stringify(creds)\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n        },\n        error => {\n            throw error;\n        })\n    .then(response => response.json())\n    .then(response => {\n        if (response.success) {\n            // If login was successful, set the token in local storage\n            localStorage.setItem('token', response.results.token);\n            localStorage.setItem('creds', JSON.stringify(creds));\n            localStorage.setItem('userinfo', JSON.stringify(response.results.userinfo));    \n              dispatch(fetchUsers())\n           // Dispatch the success action\n            dispatch(receiveLogin(response.results));\n        }\n        else {\n            var error = new Error(response.error);\n            error.response = response;\n            throw error;\n        }\n    })\n    .catch(error => {\n      alert(error.message);\n       return dispatch(loginError(error.message));})\n  };\n  \n  export const registerUser = (creds) => (dispatch) => {\n    return fetch(baseUrl + 'users/signup', {\n        method: 'POST',\n        headers: { \n            'Content-Type':'application/json' \n        },\n        body: JSON.stringify(creds)\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n        },\n        error => {\n            throw error;\n        })\n    .then(response => response.json())\n    .then(response => {\n        if (response.success) {\n            // If Registration was successful, alert the user\n            alert('Registration Successful');\n          }\n        else {\n            var error = new Error(response.error);\n            error.response = response;\n            throw error;\n        }\n    })\n    .catch(error => alert('Error : '+error.message))\n  }; \n  \n  export const requestLogout = () => {\n    return {\n      type: LOGOUT_REQUEST\n    }\n  }\n  \n  export const receiveLogout = () => {\n    return {\n      type: LOGOUT_SUCCESS\n    }\n  }\n  \n  \n  export const logoutUser = () => (dispatch) => {\n    dispatch(requestLogout())\n    localStorage.removeItem('token');\n    localStorage.removeItem('creds');  \n    localStorage.removeItem('userinfo');  \n    dispatch(receiveLogout())\n  }\n  "]},"metadata":{},"sourceType":"module"}